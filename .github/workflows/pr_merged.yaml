name: Build and Push to ECR

on:
  push:
    branches:
      - main
    paths:
      - "app/**"
      - ".github/**"

  pull_request:
    types: [closed]
    paths:
      - "app/**"

jobs:
  build_and_push:
    if: github.event.pull_request.merged == true || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      APP_NAME: intern-project-app
      AWS_REGION: ap-northeast-2
      ECS_CLUSTER_NAME: intern-project-cluster
      ECS_SERVICE_NAME: intern-project-service


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # AWS credential 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      # 도커 이미지 빌드 후 ECR에 푸시
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        working-directory: ./app
        env:
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t ${{ secrets.ECR_ADDRESS }}:$IMAGE_TAG .
          docker image tag ${{ secrets.ECR_ADDRESS }}:$IMAGE_TAG ${{ secrets.ECR_ADDRESS }}:latest
          docker push ${{ secrets.ECR_ADDRESS }}:$IMAGE_TAG
          docker push ${{ secrets.ECR_ADDRESS }}:latest
          echo "image=${{ secrets.ECR_ADDRESS }}:$IMAGE_TAG" >> $GITHUB_OUTPUT


      
      # Task Definition 다운로드
      - name: Download ECS Task Definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.APP_NAME }} --query taskDefinition > task-definition.json

      # 새로운 버전의 이미지로 task definition 업데이트
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.APP_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}
          wait-for-service-stability: 포